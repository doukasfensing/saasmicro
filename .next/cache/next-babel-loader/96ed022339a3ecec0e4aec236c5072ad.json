{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/d0uk4sf3nsin9/Desktop/saasmicro/components/question-ask-view/question-form/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { FetchContext } from '../../../store/fetch';\nimport Button from '../../button';\nimport Textarea from '../../textarea';\nimport FormInput from '../../form-input';\nimport TagInput from '../../tag-input';\nimport styles from './question-form.module.css';\n\nvar QuestionForm = function QuestionForm() {\n  _s();\n\n  var router = useRouter();\n\n  var _useContext = useContext(FetchContext),\n      authAxios = _useContext.authAxios;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  return __jsx(Formik, {\n    initialValues: {\n      title: '',\n      text: '',\n      tags: []\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var setStatus, resetForm;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setStatus = _ref.setStatus, resetForm = _ref.resetForm;\n                setLoading(true);\n                _context.prev = 2;\n                _context.next = 5;\n                return authAxios.post('questions', values);\n\n              case 5:\n                resetForm({});\n                router.push('/');\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                setStatus(_context.t0.response.data.message);\n\n              case 12:\n                setLoading(false);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 9]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    validationSchema: Yup.object({\n      title: Yup.string().required('Λείπει ο τίτλος.').max(150, 'Ο τίτλος είναι τεράστιος. Παρακαλούμε βάλτε λιγότερους από 150 χαρακτήρες.').min(15, 'Ο τίτλος είναι πολύ μικρός..'),\n      text: Yup.string().required('Δεν έχετε συμπληρώσει την ερώτηση.').min(30, 'Μην ντρέπεστε, γράψτε κάτι παραπάνω.').max(30000, 'Πολύ μεγάλη ερώτηση.'),\n      tags: Yup.array().required('Γράψτε το tag και μετά πατήστε enter.').max(100, 'Παρακαλούμε όχι παραπάνω από 100 tags,').of(Yup.string().max(15, 'Τεράστιο το tag... '))\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        errors = _ref3.errors,\n        touched = _ref3.touched,\n        status = _ref3.status,\n        handleChange = _ref3.handleChange,\n        setFieldValue = _ref3.setFieldValue,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        isSubmitting = _ref3.isSubmitting;\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, __jsx(FormInput, {\n      label: \"\\u03A4\\u03AF\\u03C4\\u03BB\\u03BF\\u03C2\",\n      inputInfo: \"\\u039D\\u03B1 \\u03B5\\u03AF\\u03C3\\u03C4\\u03B5 \\u03C3\\u03C5\\u03B3\\u03BA\\u03B5\\u03BA\\u03C1\\u03B9\\u03BC\\u03AD\\u03BD\\u03BF\\u03B9\",\n      type: \"text\",\n      name: \"title\",\n      autoComplete: \"off\",\n      value: values.title,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      hasError: touched.title && errors.title,\n      errorMessage: errors.title && errors.title,\n      placeholder: \"\\u03C0\\u03C7 \\u03A0\\u03CC\\u03C4\\u03B5 \\u03B8\\u03B1 \\u03B2\\u03B3\\u03BF\\u03C5\\u03BD \\u03BF\\u03B9 \\u03B2\\u03B1\\u03B8\\u03BC\\u03BF\\u03BB\\u03BF\\u03B3\\u03AF\\u03B5\\u03C2;\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), __jsx(Textarea, {\n      label: \"\\u039A\\u03CD\\u03C1\\u03B9\\u03B1 \\u0395\\u03C1\\u03CE\\u03C4\\u03B7\\u03C3\\u03B7\",\n      inputInfo: \"\\u039A\\u03AC\\u03BD\\u03C4\\u03B5 \\u03C4\\u03B7\\u03BD \\u03B5\\u03C1\\u03CE\\u03C4\\u03B7\\u03C3\\u03B7 \\u03C3\\u03B1\\u03C2 \\u03BC\\u03B5 \\u03CC\\u03C3\\u03B5\\u03C2 \\u03C0\\u03B5\\u03C1\\u03B9\\u03C3\\u03C3\\u03CC\\u03C4\\u03B5\\u03C1\\u03B5\\u03C2 \\u03BB\\u03B5\\u03C0\\u03C4\\u03BF\\u03BC\\u03AD\\u03C1\\u03B5\\u03B9\\u03B5\\u03C2 \\u03BC\\u03C0\\u03BF\\u03C1\\u03B5\\u03AF\\u03C4\\u03B5.\",\n      name: \"text\",\n      autoComplete: \"off\",\n      value: values.text,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      hasError: touched.text && errors.text,\n      errorMessage: errors.text && errors.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), __jsx(TagInput, {\n      label: \"Tags\",\n      inputInfo: \"\\u039C\\u03C0\\u03BF\\u03C1\\u03B5\\u03AF\\u03C4\\u03B5 \\u03BD\\u03B1 \\u03C0\\u03C1\\u03BF\\u03C3\\u03B8\\u03AD\\u03C4\\u03B5 \\u03BC\\u03AD\\u03C7\\u03C1\\u03B9 100 tags\",\n      type: \"text\",\n      name: \"tags\",\n      value: values.tags,\n      onChange: function onChange(e) {\n        return setFieldValue('tags', e, true);\n      },\n      onBlur: handleBlur,\n      hasError: touched.tags && errors.tags,\n      errorMessage: errors.tags && errors.tags,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: styles.status,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, status), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      primary: true,\n      isLoading: loading,\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, \"\\u03A5\\u03C0\\u03BF\\u03B2\\u03BF\\u03BB\\u03AE\"))));\n  });\n};\n\n_s(QuestionForm, \"hpbwroO1HoxXRSa20VH72iLxoJI=\", false, function () {\n  return [useRouter];\n});\n\n_c = QuestionForm;\nexport default QuestionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"sources":["/Users/d0uk4sf3nsin9/Desktop/saasmicro/components/question-ask-view/question-form/index.js"],"names":["React","useState","useContext","useRouter","Formik","Yup","FetchContext","Button","Textarea","FormInput","TagInput","styles","QuestionForm","router","authAxios","loading","setLoading","title","text","tags","values","setStatus","resetForm","post","push","response","data","message","object","string","required","max","min","array","of","errors","touched","status","handleChange","setFieldValue","handleBlur","handleSubmit","isSubmitting","container","e","buttonContainer"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { useRouter } from 'next/router'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\n\nimport { FetchContext } from '../../../store/fetch'\n\nimport Button from '../../button'\nimport Textarea from '../../textarea'\nimport FormInput from '../../form-input'\nimport TagInput from '../../tag-input'\n\nimport styles from './question-form.module.css'\n\nconst QuestionForm = () => {\n  const router = useRouter()\n  const { authAxios } = useContext(FetchContext)\n\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <Formik\n      initialValues={{ title: '', text: '', tags: [] }}\n      onSubmit={async (values, { setStatus, resetForm }) => {\n        setLoading(true)\n        try {\n          await authAxios.post('questions', values)\n          resetForm({})\n          router.push('/')\n        } catch (error) {\n          setStatus(error.response.data.message)\n        }\n        setLoading(false)\n      }}\n      validationSchema={Yup.object({\n        title: Yup.string()\n          .required('Λείπει ο τίτλος.')\n          .max(150, 'Ο τίτλος είναι τεράστιος. Παρακαλούμε βάλτε λιγότερους από 150 χαρακτήρες.')\n          .min(15, 'Ο τίτλος είναι πολύ μικρός..'),\n        text: Yup.string()\n          .required('Δεν έχετε συμπληρώσει την ερώτηση.')\n          .min(30, 'Μην ντρέπεστε, γράψτε κάτι παραπάνω.')\n          .max(30000, 'Πολύ μεγάλη ερώτηση.'),\n        tags: Yup.array()\n          .required('Γράψτε το tag και μετά πατήστε enter.')\n          .max(100, 'Παρακαλούμε όχι παραπάνω από 100 tags,')\n          .of(Yup.string().max(15, 'Τεράστιο το tag... '))\n      })}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        status,\n        handleChange,\n        setFieldValue,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <div className={styles.container}>\n            <FormInput\n              label=\"Τίτλος\"\n              inputInfo=\"Να είστε συγκεκριμένοι\"\n              type=\"text\"\n              name=\"title\"\n              autoComplete=\"off\"\n              value={values.title}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              hasError={touched.title && errors.title}\n              errorMessage={errors.title && errors.title}\n              placeholder=\"πχ Πότε θα βγουν οι βαθμολογίες;\"\n            />\n            <Textarea\n              label=\"Κύρια Ερώτηση\"\n              inputInfo=\"Κάντε την ερώτηση σας με όσες περισσότερες λεπτομέρειες μπορείτε.\"\n              name=\"text\"\n              autoComplete=\"off\"\n              value={values.text}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              hasError={touched.text && errors.text}\n              errorMessage={errors.text && errors.text}\n            />\n            <TagInput\n              label=\"Tags\"\n              inputInfo=\"Μπορείτε να προσθέτε μέχρι 100 tags\"\n              type=\"text\"\n              name=\"tags\"\n              value={values.tags}\n              onChange={(e) => setFieldValue('tags', e, true)}\n              onBlur={handleBlur}\n              hasError={touched.tags && errors.tags}\n              errorMessage={errors.tags && errors.tags}\n            />\n          </div>\n          <div className={styles.buttonContainer}>\n            <p className={styles.status}>{status}</p>\n            <div>\n              <Button\n                type=\"submit\"\n                primary\n                isLoading={loading}\n                disabled={isSubmitting}\n              >\n                Υποβολή\n              </Button>\n            </div>\n          </div>\n        </form>\n      )}\n    </Formik>\n  )\n}\n\nexport default QuestionForm\n"]},"metadata":{},"sourceType":"module"}